{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "96ca6df6_1de6543a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskAttributeFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2024-01-18T00:23:58Z",
      "side": 1,
      "message": "If there\u0027s a possibility that the provider flushes the cached taskConfigCache from the PerThreadCache before the Preloader gets its copy of that cache, then these masquerades might get lost. I\u0027m not sure how to fix that.",
      "revId": "7b6bb2401f90549dcb2152919ad2410a976def1b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d55e255e_82a799b5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskAttributeFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-01-18T01:09:57Z",
      "side": 1,
      "message": "\u003e If there\u0027s a possibility that the provider flushes the cached taskConfigCache\n\nThere\u0027s no flushing in a PerThreadCache, so I don\u0027t think that\u0027s an issue?",
      "parentUuid": "96ca6df6_1de6543a",
      "revId": "7b6bb2401f90549dcb2152919ad2410a976def1b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e1f93ee_2f291cdb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskAttributeFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2024-01-18T05:33:13Z",
      "side": 1,
      "message": "I think Nasser is right. When I was working on PerThreadCache change, the docker tests on subtasks-external failed when the PerThreadCache did not work as expected. Since the docker tests are passing on this whole series, this masquerade caching is working as expected.",
      "parentUuid": "d55e255e_82a799b5",
      "revId": "7b6bb2401f90549dcb2152919ad2410a976def1b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd2f3b7f_274e88df",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskAttributeFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2024-01-18T06:55:34Z",
      "side": 1,
      "message": "It\u0027s a cache, add we don\u0027t control it, we should expect it to get flushed (whether it is currently designed to flush or not) at some point and should design accordingly.",
      "parentUuid": "3e1f93ee_2f291cdb",
      "revId": "7b6bb2401f90549dcb2152919ad2410a976def1b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b1ed206_606ab9bf",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskAttributeFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-01-18T16:26:13Z",
      "side": 1,
      "message": "Ok, it seems like we don\u0027t want to use it then. What if instead we bound the TaskConfigCache in RequestScoped? If I\u0027m understanding the Guice docs [1] correctly, that should maintain a single instance per request and so just injecting it should do the right thing. That\u0027s how the websession cache is bound.\n\n[1] https://github.com/google/guice/wiki/Scopes#requestscoped",
      "parentUuid": "bd2f3b7f_274e88df",
      "revId": "7b6bb2401f90549dcb2152919ad2410a976def1b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}
{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "39e526f9_0b238378",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2023-12-19T17:25:29Z",
      "side": 1,
      "message": "Can you copy the review comments I left internally to this change?",
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d568abc0_f65ddafa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-19T20:23:14Z",
      "side": 1,
      "message": "They were actually all my comments with your replies ðŸ˜Š I\u0027ve copied them in now.",
      "parentUuid": "39e526f9_0b238378",
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "084f3d8e_7ee4f196",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskAttributeFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-19T20:23:14Z",
      "side": 1,
      "message": "Copied from internal review.\n\nNasser:\n\n\u003e Just a thought, it might be better to check isDuplicate inside getSubTasks().\n\u003e There\u0027s already a lot of control flow in this create() method, so breaking it up\n\u003e some might reduce the complexity. Easy to do as a follow-up if you want.\n\nMartin:\n\n\u003e I would like to decrease some of the flow in here, but that feels a bit wrong,\n\u003e but I\u0027m not sure. I\u0027ll think about that one more... Pushing it to getStatus()\n\u003e doesn\u0027t help much, because it is too big also!\n\nNasser:\n\n\u003e yeah, I\u0027m not sold on it either, just something to think on",
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c400382_4b17fc64",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-19T20:23:14Z",
      "side": 1,
      "message": "Copied from internal review.\n\nNasser:\n\u003e nit: s/nodes/nodeKeys/ ?\n\nMartin:\n\u003e We generally don\u0027t use \"Keys\" in names for collections that should be keys (same\n\u003e for Maps). Nodes can\u0027t be put in a Set.\n\nNasser:\n\u003e Collections of Strings are special, because the string can be anything. If you\n\u003e don\u0027t want to name it nodeKeys, I\u0027m going to say you should wrap the String in a\n\u003e NodeKey class. Then a Set\u003cNodeKey\u003e is obvious and you can call it \u0027nodes\u0027.\n\n\u003e Further, would Nodes never be able to be put into a Set? There\u0027s no javadocs for\n\u003e NodeList or Node, so it\u0027s hard for a developer to know what\u0027s expected for the\n\u003e classes.",
      "range": {
        "startLine": 87,
        "startChar": 26,
        "endLine": 87,
        "endChar": 31
      },
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9e36644_562b855f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-04-15T17:36:42Z",
      "side": 1,
      "message": "Do we really need to use nodeKey here ? Can\u0027t we simply use TaskKey here, since we are anyway checking if this NodeSet is referencing the correct change ?",
      "parentUuid": "6c400382_4b17fc64",
      "range": {
        "startLine": 87,
        "startChar": 26,
        "endLine": 87,
        "endChar": 31
      },
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd6670dd_0f368581",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-04-16T16:13:35Z",
      "side": 1,
      "message": "\u003e Do we really need to use nodeKey here ? Can\u0027t we simply use TaskKey here, since we are anyway checking if this NodeSet is referencing the correct change ?\n\nYes, it\u0027s needed to distinguish between tasks evaluated for different changes in change task factories.\n\nIf changing to use a TaskKey doesn\u0027t make tests fail, we should add more tests that would fail in that case.",
      "parentUuid": "e9e36644_562b855f",
      "range": {
        "startLine": 87,
        "startChar": 26,
        "endLine": 87,
        "endChar": 31
      },
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8028abd4_6579ae10",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-04-23T03:26:33Z",
      "side": 1,
      "message": "\u003e\u003e Do we really need to use nodeKey here ? Can\u0027t we simply use TaskKey here, since we are anyway checking if this NodeSet is referencing the correct change ?\n\n\u003e Yes, it\u0027s needed to distinguish between tasks evaluated for different changes in change task factories.\n\nACK\n\n\u003e If changing to use a TaskKey doesn\u0027t make tests fail, we should add more tests that would fail in that case.\n\nACK",
      "parentUuid": "dd6670dd_0f368581",
      "range": {
        "startLine": 87,
        "startChar": 26,
        "endLine": 87,
        "endChar": 31
      },
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "655034a0_2cf201f8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-04-23T06:11:28Z",
      "side": 1,
      "message": "IMO it should be ok to use \u0027nodeKeys\u0027 since we\u0027re already using the name \u0027duplicateKeys\u0027 for collection in a similar use-case.",
      "parentUuid": "8028abd4_6579ae10",
      "range": {
        "startLine": 87,
        "startChar": 26,
        "endLine": 87,
        "endChar": 31
      },
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac403c1d_21cfd5f7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-04-23T06:28:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "655034a0_2cf201f8",
      "range": {
        "startLine": 87,
        "startChar": 26,
        "endLine": 87,
        "endChar": 31
      },
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fe49061_0eb529aa",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-19T20:23:14Z",
      "side": 1,
      "message": "Copied from internal review:\n\nNasser:\n\u003e Can you rename this so that \"needed\" is defined? I think it means whenever the\n\u003e enclosing TaskTree is for a different change than the one this NodeSet was\n\u003e created for?\n\nMartin:\n\u003e That feels wrong, because the caller shouldn\u0027t have to know the policy, this\n\u003e naming encapsulates it.\n\nNasser:\n\u003e Fair. But the problem I pointed out still exists. Can you add another method that\n\u003e clearIfNeeded() calls that has the policy-based name?",
      "range": {
        "startLine": 103,
        "startChar": 19,
        "endLine": 103,
        "endChar": 32
      },
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66c7c817_5531b4ba",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-04-15T17:36:42Z",
      "side": 1,
      "message": "Would renaming the method to \u0027clearIfOutdated\u0027 help resolve this ?",
      "parentUuid": "0fe49061_0eb529aa",
      "range": {
        "startLine": 103,
        "startChar": 19,
        "endLine": 103,
        "endChar": 32
      },
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77c33520_64700ac3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-04-16T16:13:35Z",
      "side": 1,
      "message": "\u003e Would renaming the method to \u0027clearIfOutdated\u0027 help resolve this ?\n\nWe can keep it as `clearIfNeeded()`.",
      "parentUuid": "66c7c817_5531b4ba",
      "range": {
        "startLine": 103,
        "startChar": 19,
        "endLine": 103,
        "endChar": 32
      },
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95387001_f86a4ad2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-19T20:23:14Z",
      "side": 1,
      "message": "Related to the comment just above, do you actually want (or better, need) to do object reference comparison here? If you don\u0027t actually need the ChangeData object (you don\u0027t seem to use it for anything except this equality check), maybe only keep a reference to the Change.Id?",
      "range": {
        "startLine": 104,
        "startChar": 21,
        "endLine": 104,
        "endChar": 23
      },
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33470a22_2fffbbe5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-04-16T16:13:35Z",
      "side": 1,
      "message": "Never mind on this. The reference check is probably the best way to do it.",
      "parentUuid": "95387001_f86a4ad2",
      "range": {
        "startLine": 104,
        "startChar": 21,
        "endLine": 104,
        "endChar": 23
      },
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1e3695d_4b15666e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 374,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-19T20:23:14Z",
      "side": 1,
      "message": "Copied from internal review.\n\nNasser:\n\u003e s/getChangeTaskByBaseTasksFactory/getChangeTasksByBaseTasksFactory/\n\nMartin:\n\u003e Maybe it should now be getNodeSet...()?\n\nNasser:\n\u003e maybe? Depends a bit on what we decide with the naming above. I was just pointing\n\u003e out the missing plural, but NodeSet!\u003dChangeTasks to me. However, above we\u0027re\n\u003e saying NodeSet is just a set of node keys. So maybe this should be getNodeKeys...\n\u003e or getNodes...?",
      "range": {
        "startLine": 374,
        "startChar": 42,
        "endLine": 374,
        "endChar": 73
      },
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96b62baa_6f2cd170",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 374,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-04-16T16:13:35Z",
      "side": 1,
      "message": "Rename this to `getNodeSetByBaseTasksFactory()`",
      "parentUuid": "a1e3695d_4b15666e",
      "range": {
        "startLine": 374,
        "startChar": 42,
        "endLine": 374,
        "endChar": 73
      },
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be1f7d7e_d4859a3b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 374,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-04-23T06:28:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96b62baa_6f2cd170",
      "range": {
        "startLine": 374,
        "startChar": 42,
        "endLine": 374,
        "endChar": 73
      },
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cd2faa5_656bc9b8",
        "filename": "src/main/resources/Documentation/task.md",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-19T20:23:14Z",
      "side": 1,
      "message": "It would probably help to have an example for this new case, but I don\u0027t know how to fit that in with the existing docs. I can reason out what it means, but it wasn\u0027t trivial and would have been harder if I wasn\u0027t reviewing this code too.\n\nMaybe a reword would help?",
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf203c05_986e00db",
        "filename": "src/main/resources/Documentation/task.md",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-19T20:23:14Z",
      "side": 1,
      "message": "for follow up: This is missing a reference to `duplicate-key` below.",
      "revId": "86f1f954ac83c3ed0e56279f62cbf74a07d536a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}
{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3e2c58fa_4dbe00f1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/util/TopKeyMap.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-07-10T23:27:50Z",
      "side": 1,
      "message": "This seems like it\u0027s no longer true? Are the insertion/space claims still true?",
      "range": {
        "startLine": 24,
        "startChar": 21,
        "endLine": 24,
        "endChar": 32
      },
      "revId": "345e5844bd41f974a7e7131f197a62e1e2bf5bbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19cd4c20_988819cb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/util/TopKeyMap.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-07-11T04:03:35Z",
      "side": 1,
      "message": "I haven\u0027t checked the performance implications of using List yet, but I\u0027ve uploaded a new PS using Array which works. Should we go ahead with that instead ?",
      "parentUuid": "3e2c58fa_4dbe00f1",
      "range": {
        "startLine": 24,
        "startChar": 21,
        "endLine": 24,
        "endChar": 32
      },
      "revId": "345e5844bd41f974a7e7131f197a62e1e2bf5bbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6afc818_7cd17735",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/util/TopKeyMap.java",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2024-07-10T01:20:10Z",
      "side": 1,
      "message": "It is unclear to me why this fixes the error. Did this break when we moved to Java 11?",
      "range": {
        "startLine": 68,
        "startChar": 14,
        "endLine": 68,
        "endChar": 37
      },
      "revId": "345e5844bd41f974a7e7131f197a62e1e2bf5bbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd094127_b2e79d92",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/util/TopKeyMap.java",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-07-10T09:25:45Z",
      "side": 1,
      "message": "Earlier we were trying to cast an `Object` array to `Entry` array resulting in \u0027ClassCastException\u0027. I suspect if this piece of code was ever working.\n\nTherefore, we want to initialize `entries` with an array of concrete Entry class. However, `Entry` is a non-static inner class, which means it is within the scope of the outer class\u0027s generic parameters, and which also means that it is implicitly parameterized with the outer class\u0027s generic parameters. Java does not allow creation of arrays of parameterized types. So, below code doesn\u0027t work.\n\n```\nentries \u003d new Entry[length];\n```\n\nThe above restriction applies only to generic arrays, and not generic collections, therefore I used List instead.",
      "parentUuid": "f6afc818_7cd17735",
      "range": {
        "startLine": 68,
        "startChar": 14,
        "endLine": 68,
        "endChar": 37
      },
      "revId": "345e5844bd41f974a7e7131f197a62e1e2bf5bbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d507117_57ed1bd3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/util/TopKeyMap.java",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-07-10T23:27:50Z",
      "side": 1,
      "message": "\u003e Earlier we were trying to cast an `Object` array to `Entry` array resulting in \u0027ClassCastException\u0027. I suspect if this piece of code was ever working.\n\u003e \n\u003e Therefore, we want to initialize `entries` with an array of concrete Entry class. However, `Entry` is a non-static inner class, which means it is within the scope of the outer class\u0027s generic parameters, and which also means that it is implicitly parameterized with the outer class\u0027s generic parameters.\n\nWe could probably make `Entry` static, but then we have a duplicate generic type, so I\u0027d prefer avoiding that.\n\n\u003e Java does not allow creation of arrays of parameterized types. So, below code doesn\u0027t work.\n\u003e \n\u003e ```\n\u003e entries \u003d new Entry[length];\n\u003e ```\n\nThat doesn\u0027t work, but given the `@SuppressWarnings(\"unchecked\")` annotation, I wonder if this was supposed to be:\n\n```\nentries \u003d new TopKeyMap.Entry[length];\n```\n\nwhich according to https://stackoverflow.com/a/8766959 will create an unchecked warning, but do what we want.\n\n\u003e \n\u003e The above restriction applies only to generic arrays, and not generic collections, therefore I used List instead.\n\nI\u0027m fine with moving to a `List` if we can check the claims above about runtime/space performance and agree that any differences are acceptable.",
      "parentUuid": "fd094127_b2e79d92",
      "range": {
        "startLine": 68,
        "startChar": 14,
        "endLine": 68,
        "endChar": 37
      },
      "revId": "345e5844bd41f974a7e7131f197a62e1e2bf5bbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa47d1db_a37673fc",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/util/TopKeyMap.java",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-07-11T03:46:15Z",
      "side": 1,
      "message": "\u003e\u003e Java does not allow creation of arrays of parameterized types. So, below code doesn\u0027t work.\n`entries \u003d new Entry[length];`\n\n\u003e That doesn\u0027t work, but given the @SuppressWarnings(\"unchecked\") annotation, I wonder if this was supposed to be:\n `entries \u003d new TopKeyMap.Entry[length];`\nwhich according to https://stackoverflow.com/a/8766959 will create an unchecked warning, but do what we want.\n\nI tried this approach earlier, but the task plugin fails to build with below error, probably because `TopKeyMap` expects a concrete class for type parameter. Since, passing around the class instance would require changing the method signature and the code outside `TopKeyMap.java`, I abandoned the approach.\n```\n  entries \u003d new TopKeyMap.Entry[length];\n                         ^\n  missing type arguments for generic class TopKeyMap\u003cV\u003e.Entry\n  where V is a type-variable:\n    V extends Object declared in class TopKeyMap\nerror: warnings found and -Werror specified\nTarget //:task failed to build\n```\n\n\u003e\u003e The above restriction applies only to generic arrays, and not generic collections, therefore I used List instead.\n\n\u003e I\u0027m fine with moving to a List if we can check the claims above about runtime/space performance and agree that any differences are acceptable.\n\nACK",
      "parentUuid": "0d507117_57ed1bd3",
      "range": {
        "startLine": 68,
        "startChar": 14,
        "endLine": 68,
        "endChar": 37
      },
      "revId": "345e5844bd41f974a7e7131f197a62e1e2bf5bbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}
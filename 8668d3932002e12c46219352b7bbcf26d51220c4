{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dd2518ed_98fcabeb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskConfig.java",
        "patchSetId": 5
      },
      "lineNbr": 332,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-07-16T18:33:26Z",
      "side": 1,
      "message": "I should have noticed in my first review, but we shouldn\u0027t have a hardcoded default value here and it should be passed instead.\n```suggestion\n  protected int getInt(SubSectionKey s, String key, int default) {\n    return cfg.getInt(s.section(), s.subSection(), key, default);\n```\n\nAnd then the caller is responsible for passing `Integer.MAX_VALUE`, but likely using its own named constant, like `DEFAULT_EVALUATION_THRESHOLD`.",
      "range": {
        "startLine": 331,
        "startChar": 0,
        "endLine": 332,
        "endChar": 75
      },
      "revId": "8668d3932002e12c46219352b7bbcf26d51220c4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a3db13e_2e3b8bfe",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskConfig.java",
        "patchSetId": 5
      },
      "lineNbr": 332,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-07-17T10:28:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd2518ed_98fcabeb",
      "range": {
        "startLine": 331,
        "startChar": 0,
        "endLine": 332,
        "endChar": 75
      },
      "revId": "8668d3932002e12c46219352b7bbcf26d51220c4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a34a2571_25be7347",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskPluginDefinedInfoFactory.java",
        "patchSetId": 5
      },
      "lineNbr": 221,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-07-16T18:33:26Z",
      "side": 1,
      "message": "Maybe we need to be more specific in our definition of \"skipped\". What all are we skipping when a task is expensive? From the code below, it seems we only skip subtask and in-progress evaluation.\n\nShould we also be skipping applicability? Validity? Duplicity (i.e. no point in having a task that\u0027s both skipped and duplicate, and skipped is less costly to check)? Applicability in particular might be what\u0027s expensive in a task, so it seems odd to still compute that. I\u0027m ok we decide it makes sense to keep that behavior, but we need to document it.",
      "revId": "8668d3932002e12c46219352b7bbcf26d51220c4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1983509_2f11ebc6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskPluginDefinedInfoFactory.java",
        "patchSetId": 5
      },
      "lineNbr": 221,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-07-17T10:47:07Z",
      "side": 1,
      "message": "\u003e What all are we skipping when a task is expensive? From the code below, it seems we only skip subtask and in-progress evaluation.\n\nWe\u0027re skipping evaluation of subtasks, in-progress evaluation and also the evaluation of status (pass or fail keys).\n\n\u003e Should we also be skipping applicability?\n\nThe reason behind not skipping applicability was to avoid including the skipped task in the output if it\u0027s not applicable (same idea as duplicate tasks)\n\n\u003e Duplicity (i.e. no point in having a task that\u0027s both skipped and duplicate, and skipped is less costly to check)? \n\nYes, we can make these checks mutually exclusive",
      "parentUuid": "a34a2571_25be7347",
      "revId": "8668d3932002e12c46219352b7bbcf26d51220c4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f3f2837_5b8e972a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskPluginDefinedInfoFactory.java",
        "patchSetId": 5
      },
      "lineNbr": 221,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-07-17T18:11:16Z",
      "side": 1,
      "message": "\u003e \u003e What all are we skipping when a task is expensive? From the code below, it seems we only skip subtask and in-progress evaluation.\n\u003e \n\u003e We\u0027re skipping evaluation of subtasks, in-progress evaluation and also the evaluation of status (pass or fail keys).\n\nAck.\n\n\u003e \n\u003e \u003e Should we also be skipping applicability?\n\u003e \n\u003e The reason behind not skipping applicability was to avoid including the skipped task in the output if it\u0027s not applicable (same idea as duplicate tasks)\n\nOk. I can see the motivation for doing that, but it still seems counter-intuitive. Is it more \"expensive\" to include the skipped tasks in the output or to do their applicability checks?\n\n\u003e \n\u003e \u003e Duplicity (i.e. no point in having a task that\u0027s both skipped and duplicate, and skipped is less costly to check)? \n\u003e \n\u003e Yes, we can make these checks mutually exclusive\n\nSounds good, thanks.",
      "parentUuid": "f1983509_2f11ebc6",
      "revId": "8668d3932002e12c46219352b7bbcf26d51220c4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83802707_9c60e41f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskPluginDefinedInfoFactory.java",
        "patchSetId": 5
      },
      "lineNbr": 236,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-07-17T18:11:16Z",
      "side": 1,
      "message": "nit: Can you use the same style used by `hasPass` above for this and the inProgress if below?\n```suggestion\n          if (!(isDuplicate || isExpensive)) {\n```",
      "range": {
        "startLine": 236,
        "startChar": 14,
        "endLine": 236,
        "endChar": 42
      },
      "revId": "8668d3932002e12c46219352b7bbcf26d51220c4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c566b54e_a68bff38",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskPluginDefinedInfoFactory.java",
        "patchSetId": 5
      },
      "lineNbr": 236,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-07-18T12:57:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83802707_9c60e41f",
      "range": {
        "startLine": 236,
        "startChar": 14,
        "endLine": 236,
        "endChar": 42
      },
      "revId": "8668d3932002e12c46219352b7bbcf26d51220c4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}
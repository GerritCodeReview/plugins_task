{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6f32806f_8a66e3f5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-11-03T14:42:14Z",
      "side": 1,
      "message": "Any performance impacts from doing this?",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48411409_a8b1598c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2023-11-06T09:46:54Z",
      "side": 1,
      "message": "No performance impact Nasser.",
      "parentUuid": "6f32806f_8a66e3f5",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fa61c54_a8386f3f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2023-11-03T10:29:58Z",
      "side": 1,
      "message": "Same issue with subtask-factory as well?",
      "range": {
        "startLine": 69,
        "startChar": 16,
        "endLine": 69,
        "endChar": 22
      },
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd6dc3d9_3837ef87",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2023-11-03T10:39:56Z",
      "side": 1,
      "message": "Looks like all of these will have the same issue: preloadTask, subTasksExternals, subTasksFactories, subTasksFiles. I\u0027ll upload a follow-on changes to fix these.",
      "parentUuid": "4fa61c54_a8386f3f",
      "range": {
        "startLine": 69,
        "startChar": 16,
        "endLine": 69,
        "endChar": 22
      },
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47b3fcad_f30aecc5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-11-03T14:42:14Z",
      "side": 1,
      "message": "You might want to see if there\u0027s a way to de-dup some of the new code you added in `AbstractExander` when you do that.",
      "parentUuid": "bd6dc3d9_3837ef87",
      "range": {
        "startLine": 69,
        "startChar": 16,
        "endLine": 69,
        "endChar": 22
      },
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "176b6fba_f01e8437",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2023-11-06T09:46:54Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "47b3fcad_f30aecc5",
      "range": {
        "startLine": 69,
        "startChar": 16,
        "endLine": 69,
        "endChar": 22
      },
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6fc2df0_9d38fae3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2023-12-05T18:00:29Z",
      "side": 1,
      "message": "I believe this breaks the ability to name a subtask in another file since it assumes the subTasks Strings only pointed to task names and not task references (as defined as legal here: https://gerrit.googlesource.com/plugins/task/+/ba8f1423d2e7cc502a8af95bf87d365755d47c0f/src/main/resources/Documentation/task_expression.md) which could include a file reference. I am surprised that this does not break any tests, we should have had tests for that.",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7454c24_9b04c40e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2023-12-07T09:38:16Z",
      "side": 1,
      "message": "We already have tests for this Martin and passing as well [2]. Yes, initially we assumes that the task is in the current file and then after parsing the TaskReference we update the FileKey. That logic is in here [1], where we determine whether we are pointing to a task in same file or different file.\n\n[1] https://gerrit.googlesource.com/plugins/task/+/refs/changes/94/391794/1/src/main/java/com/googlesource/gerrit/plugins/task/TaskKey.java?autodive\u003d0%2F%2F#91\n\n[2]\n[root \"Root Import user tasks\"]\n  applicable \u003d is:open\n  subtask \u003d @testuser/foo/bar.config^Absolute Task\n  subtask \u003d @testuser^task in user root config file\n\nand \n\n[root \"Root Import group tasks\"]\n  applicable \u003d is:open\n  subtask \u003d %{non_secret_group_name_without_space}/foo/bar.config^Absolute Task 1\n  \nhttps://gerrit.googlesource.com/plugins/task/+/refs/changes/94/391794/1/src/main/resources/Documentation/test/task_states.md",
      "parentUuid": "a6fc2df0_9d38fae3",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4446ea11_7181facc",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-07T15:31:29Z",
      "side": 1,
      "message": "\u003e   `subtask \u003d %{non_secret_group_name_without_space}/foo/bar.config^Absolute Task 1`\n\nThis is a test placeholder, not a task plugin property. I don\u0027t see any tests using a property for a not-same-file task reference.",
      "parentUuid": "e7454c24_9b04c40e",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "819d3026_014e5268",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2023-12-07T15:35:01Z",
      "side": 1,
      "message": "\u003e This is a test placeholder, not a task plugin property. I don\u0027t see any tests using a property for a not-same-file task reference.\n\nYes Nasser, it is a test placeholder. But Martin was asking about just a plain not-same-file task reference.",
      "parentUuid": "4446ea11_7181facc",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa0615b3_42b979f1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2023-11-10T17:59:54Z",
      "side": 1,
      "message": "I don\u0027t think you need to have TaskKeys here, can\u0027t you use the file and task from the \"task\" variable instead?",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c67d4ab3_6c4c389f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2023-11-14T17:33:30Z",
      "side": 1,
      "message": "Thanks for reviewing this change Martin. \n\n\u003e can\u0027t you use the file and task from the \"task\" variable instead?\n\nNo actually. The task variable here points to the current task file, where as the preloaded subtask also points to the current task file before this change. Rather we want the subtask to point to the file from which it was imported from.",
      "parentUuid": "aa0615b3_42b979f1",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b902259_fc06eda6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/TaskTree.java",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2023-12-05T14:55:37Z",
      "side": 1,
      "message": "I believe nothing is pending on this comment.",
      "parentUuid": "c67d4ab3_6c4c389f",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6272627f_859e671b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/properties/AbstractExpander.java",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2023-11-10T17:39:30Z",
      "side": 1,
      "message": "This is a layering violation and should probably be fixed. This class is meant to be generic and it should not understand anything about tasks, and it should not be able to import a TaskKey.",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e54d5083_8aa8509b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/properties/AbstractExpander.java",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2023-11-15T13:02:12Z",
      "side": 1,
      "message": "Would it be ok for this logic to live in Expander.java[1] ?\n\n[1] https://gerrit.googlesource.com/plugins/task/+/refs/heads/stable-3.5/src/main/java/com/googlesource/gerrit/plugins/task/properties/Expander.java",
      "parentUuid": "6272627f_859e671b",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4efb710d_b7a9b9ee",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/properties/AbstractExpander.java",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-04T21:43:02Z",
      "side": 1,
      "message": "Based on other files in the properties package, the Expander class seems more appropriate to me.",
      "parentUuid": "e54d5083_8aa8509b",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab7bd00d_941d25ab",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/properties/AbstractExpander.java",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2023-12-04T22:49:54Z",
      "side": 1,
      "message": "Expander looks to be \"generic\" also, and likely it would be better to 1) find a class which already has \"task\" specific stuff in it, or 2) override a generic class with a custom one, or 3) enhance a generic class to be modifiable via some custom task specific helper class or function pointer.",
      "parentUuid": "4efb710d_b7a9b9ee",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "859959ba_96c54215",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/properties/AbstractExpander.java",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-04T23:35:08Z",
      "side": 1,
      "message": "\u003e Expander looks to be \"generic\" also, and likely it would be better to 1) find a class which already has \"task\" specific stuff in it, or 2) override a generic class with a custom one, or 3) enhance a generic class to be modifiable via some custom task specific helper class or function pointer.\n\nOk, I see what you mean. So if we went the route of #3, that would be something like modifying Expander/AbstractExpander to optionally take a constructor parameter that would be provided by the Properties class (which does already have \"task\"-specific stuff in it) and that parameter would have the new special behavior for TaskKey/SubSectionKey/etc. Does that sound like the right track?\n\nThat constructor parameter might be a map of ClassName (String) -\u003e ExpandFunction (which provides functionality specific to each type similar to what the new methods added in [1] do).\n\n[1] https://gerrit-review.googlesource.com/c/plugins/task/+/392274/1/src/main/java/com/googlesource/gerrit/plugins/task/properties/AbstractExpander.java#149",
      "parentUuid": "ab7bd00d_941d25ab",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb087f3a_e2ec73b6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/properties/AbstractExpander.java",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2023-12-05T14:55:37Z",
      "side": 1,
      "message": "Trying to address it here: https://gerrit-review.googlesource.com/c/plugins/task/+/396537/1\n\nKindly review.",
      "parentUuid": "859959ba_96c54215",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f533bdf_606c5b37",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/properties/AbstractExpander.java",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2023-11-10T17:59:54Z",
      "side": 1,
      "message": "This feels weird to be expanding a TaskKey since a Key should be immutable?",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "995f2c5d_f54d0def",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/properties/AbstractExpander.java",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-04T21:43:02Z",
      "side": 1,
      "message": "\u003e This feels weird to be expanding a TaskKey since a Key should be immutable?",
      "parentUuid": "8f533bdf_606c5b37",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78b5cf5a_3f0d81f6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/properties/AbstractExpander.java",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-04T21:43:02Z",
      "side": 1,
      "message": "\u003e This feels weird to be expanding a TaskKey since a Key should be immutable?\n\nIt is a little weird, but the values can have properties, so while it\u0027s immutable, it\u0027s not guaranteed to be an exact reference to a single task.\n\nI talked with Prudhvi about it today and using a SubSectionKey is actually sufficient for most of the config keys, but @prudhvi.alahari@linaro.org as I think on it more now, is there a reason we shouldn\u0027t use `TaskKey`? Depending on how we fix the issue I pointed out in [1] we might need it?\n\n[1] https://gerrit-review.googlesource.com/c/plugins/task/+/392274/comment/9636c7f0_3a04ba65/",
      "parentUuid": "8f533bdf_606c5b37",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f843ad8_28f4a7c3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/properties/AbstractExpander.java",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2023-12-05T11:40:56Z",
      "side": 1,
      "message": "\u003e  but Prudhvi as I think on it more now, is there a reason we shouldn\u0027t use TaskKey?\n\nThere is no strong reason to not use TaskKey here. But it depends on the definition of the TaskKey class itself. If we think we only create a TaskKey once we have the exact reference to the task, then it is appropriate to use SubSectionKey here.",
      "parentUuid": "995f2c5d_f54d0def",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c39bff11_9f909aaa",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/task/properties/AbstractExpander.java",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2023-12-05T14:55:37Z",
      "side": 1,
      "message": "Trying to address it here: https://gerrit-review.googlesource.com/c/plugins/task/+/396537/1\n\nKindly review.",
      "parentUuid": "2f843ad8_28f4a7c3",
      "revId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ba8f1423d2e7cc502a8af95bf87d365755d47c0f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}
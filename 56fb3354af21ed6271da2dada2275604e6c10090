{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "373318d8_98fdbfd9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2024-02-20T23:00:02Z",
      "side": 1,
      "message": "To be honest, this approach feels weird. I think that a better approach would be to extend the TaskExpression format to allow referring to tasks in arbitrary projects. I believe I have given suggestions for formats for this in the past. Such an extension would feel more \"intuitive\" to me, would add a lot more configurability to tasks, and would allow configuration to happen without having access to the server\u0027s config files.",
      "revId": "56fb3354af21ed6271da2dada2275604e6c10090",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12e21679_0af1f3a0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2024-02-21T18:41:49Z",
      "side": 1,
      "message": "\u003e To be honest, this approach feels weird.\n\nCan you please explain why it feels weird?\n\n\u003e I think that a better approach would be to extend the TaskExpression format to allow referring to tasks in arbitrary projects.\n\nWith the approach you suggested, the roots will still be in All-Projects:refs/meta/config. See the comment below for why that still has limitations.\n\n\u003e I believe I have given suggestions for formats for this in the past. Such an extension would feel more \"intuitive\" to me, would add a lot more configurability to tasks, and would allow configuration to happen without having access to the server\u0027s config files.\n\nWe agree this extension will add a lot of configurability to tasks, however it does not address the self-service problem at the root level. Given how little additional code complexity this change adds, we don\u0027t think there\u0027s a good reason to not do it.",
      "parentUuid": "373318d8_98fdbfd9",
      "revId": "56fb3354af21ed6271da2dada2275604e6c10090",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2c9d131_b065e902",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2024-02-26T19:14:35Z",
      "side": 1,
      "message": "It seems to me that this approach pushes the problem down to the next level, but it will still be there? In other words, how will you get teams to self service at the next level without giving them all the ability to write to that level (essentially giving them all the ability to overwrite each others roots)?\n\nAre you seeking to get teams the ability to edit their roots, or to add new roots? The original philosophy and design was aimed at allowing server admins to control which teams got to have a root entry, but to then allow the teams to control what was in those roots, and I believe expanding TaskExpressions allows for that? If you additionally need the teams the ability to add there own roots, then perhaps it would make sense to add a keyword which points to another file and imports all the roots from that file. This would still give admins control of the players, but allow those players to add more than one root (and would not require expanding TaskExpressions).",
      "parentUuid": "12e21679_0af1f3a0",
      "revId": "56fb3354af21ed6271da2dada2275604e6c10090",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f87221cd_3f212742",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-02-26T19:23:32Z",
      "side": 1,
      "message": "\u003e It seems to me that this approach pushes the problem down to the next level, but it will still be there? In other words, how will you get teams to self service at the next level without giving them all the ability to write to that level (essentially giving them all the ability to overwrite each others roots)?\n\nThere\u0027s some ideas sketched out in https://gerrit-review.googlesource.com/c/plugins/task/+/407979/1/design-docs/task_config_references.md that I want to make clearer. I was planning to tie that change/doc and this change together better somehow, but I\u0027m not sure how. The high level idea is to dogfood the task plugin itself. Have a root that applies to wherever the task roots live and set up subtasks from there that have rules for changes to the root config file itself as well as for team-specific directories. The team-specific subtasks will be references to a task in their directory, so they can change their own review/verification tasks as needed.\n\n\u003e \n\u003e Are you seeking to get teams the ability to edit their roots, or to add new roots? The original philosophy and design was aimed at allowing server admins to control which teams got to have a root entry, but to then allow the teams to control what was in those roots, and I believe expanding TaskExpressions allows for that? If you additionally need the teams the ability to add there own roots, then perhaps it would make sense to add a keyword which points to another file and imports all the roots from that file. This would still give admins control of the players, but allow those players to add more than one root (and would not require expanding TaskExpressions).\n\nNo, we want to allow admins to either retain control of roots or very specifically delegate that responsibility (but not to all teams with a root).",
      "parentUuid": "c2c9d131_b065e902",
      "revId": "56fb3354af21ed6271da2dada2275604e6c10090",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d690bee6_36c825a7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2024-02-28T19:22:53Z",
      "side": 1,
      "message": "I think I know understand the intent of this better. It would be nice if a more generic mechanism were proposed as this one feels hacky. I do get how simple this likely is in the code though.",
      "parentUuid": "f87221cd_3f212742",
      "revId": "56fb3354af21ed6271da2dada2275604e6c10090",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b94ac21a_635f4c17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-02-28T19:32:52Z",
      "side": 1,
      "message": "I\u0027m glad it\u0027s clearer now, thanks for asking questions to help us explain it. I haven\u0027t come up with a generic mechanism that\u0027s as simple as this and solves the problems we care about too. If you have time, take a look at `src/main/resources/Documentation/design/task_plugin_config.md` and see if you notice something we\u0027ve missed there.",
      "parentUuid": "d690bee6_36c825a7",
      "revId": "56fb3354af21ed6271da2dada2275604e6c10090",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4125ebc4_1d565c10",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2024-02-20T23:00:02Z",
      "side": 1,
      "message": "I don\u0027t quite understand how these last few things are really related to this change?",
      "revId": "56fb3354af21ed6271da2dada2275604e6c10090",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b961024_28c10d0a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2024-02-21T18:41:49Z",
      "side": 1,
      "message": "I am trying to explain the problems solved by moving root task configs out from All-Projects. Even if organizations have a way to move non-root tasks to arbitrary projects, they likely still desire and benefit from a way to apply rules to how root task configs are updated. This paragraph in my commit-msg describes some potential ways to apply rules to task configs that are in-compatible with roots in All-Projects:refs/meta/config.\n\nIn summary, we\u0027d have more freedom in configuring the new project containing root (and any other) task configs as we see fit without running into the restrictions that come with All-Projects:refs/meta/config.",
      "parentUuid": "4125ebc4_1d565c10",
      "revId": "56fb3354af21ed6271da2dada2275604e6c10090",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "416cf2be_b66abc91",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2024-02-26T19:14:35Z",
      "side": 1,
      "message": "How does this all relate to submit requirements and other plugin configs?",
      "parentUuid": "2b961024_28c10d0a",
      "revId": "56fb3354af21ed6271da2dada2275604e6c10090",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7e11553_5d66fa19",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-02-26T19:23:32Z",
      "side": 1,
      "message": "Oops, I read the commit message text a few times and never noticed it didn\u0027t directly state the problem. Submit requirements, label configs, and plugin configs (typically) are all inherited. Which means that if you set the config in All-Projects, every project is going to get that configuration. There usually isn\u0027t any way to stop that inheritance or to otherwise limit the scope such that it can be made specific to the task plugin config.",
      "parentUuid": "416cf2be_b66abc91",
      "revId": "56fb3354af21ed6271da2dada2275604e6c10090",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}
{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b44dd534_1877aecf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2021-04-07T21:45:52Z",
      "side": 1,
      "message": "This builds successfully on gerrit 3.2.",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9112f37_a31d7500",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2021-04-07T21:44:34Z",
      "side": 1,
      "message": "Note that when we add support for gerrit 3.3, this needs to be made \"load(\"@npm//@bazel/rollup:index.bzl\", \"rollup_bundle\")\".",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b23c789_fc15847c",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-07T22:42:58Z",
      "side": 1,
      "message": "This doesn\u0027t seem to be exposed through bazlets (or however it should be exposed) and so it breaks the standalone build. Are there any UI plugins that support standalone builds still? (I see reviewers removed it [1])\n\n[1] https://gerrit.googlesource.com/plugins/reviewers/+/d642d9664770257a9eacd09d8e35c22eea4dacb3",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5091c56b_08b0056c",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2021-04-07T22:46:55Z",
      "side": 1,
      "message": "Going off that change, it doesn\u0027t seem like gerrit supports polymer 3 plugins in standalone mode.",
      "parentUuid": "9b23c789_fc15847c",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1affc388_5ad11a7b",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-07T22:51:14Z",
      "side": 1,
      "message": "That\u0027s a real bummer. @DavidO/Ben, any thoughts on how we can fix that?",
      "parentUuid": "5091c56b_08b0056c",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08f40f52_dfec41c7",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-07T22:57:11Z",
      "side": 1,
      "message": "Also, seems like https://gerrit-review.googlesource.com/Documentation/dev-build-plugins.html and other docs need update(s) for UI plugins.",
      "parentUuid": "1affc388_5ad11a7b",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8484ba58_a20195e0",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-04-08T08:38:30Z",
      "side": 1,
      "message": "\u003e That\u0027s a real bummer. @DavidO/Ben, any thoughts on how we can fix that?\n\nRemove standalone build mode. rules_nodejs support was never added to standalone build mode.",
      "parentUuid": "08f40f52_dfec41c7",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "488030e4_a9bd5813",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2021-04-08T10:11:09Z",
      "side": 1,
      "message": "I am not aware of any UI plugins that support standalone build mode.\n\nI am not the expert here (Dmitrii and David are), but my guess is that maintaining standalone build mode for UI plugins is a substantial amount of work, so we would need to understand the benefit of it.\n\nRe documentation: Yes, we are aware of that and I promise to update the docs substantially this quarter. Until that is done feel free to send me emails directly asking for help.",
      "parentUuid": "8484ba58_a20195e0",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b35467b0_5328feae",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-04-08T14:07:44Z",
      "side": 1,
      "message": "\u003e I am not aware of any UI plugins that support standalone build mode.\n\nThis was working in the task plugin and the reviewers plugin prior to Polymer 3.\n\n\u003e \n\u003e I am not the expert here (Dmitrii and David are), but my guess is that maintaining standalone build mode for UI plugins is a substantial amount of work, so we would need to understand the benefit of it.\n\nThe face value benefit is that I only need to clone the plugin I want to develop on to be able to develop it. I would think most non-core-plugin development happens against a stable Gerrit version, so having the Gerrit source tree shouldn\u0027t be required. That benefit multiplies into others like a simpler CI/CD setup too.\n\n\u003e \n\u003e Re documentation: Yes, we are aware of that and I promise to update the docs substantially this quarter. Until that is done feel free to send me emails directly asking for help.\n\nThanks!",
      "parentUuid": "488030e4_a9bd5813",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d0af775_81467798",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2021-04-12T07:42:04Z",
      "side": 1,
      "message": "Building a Gerrit frontend plugin means building a js file and putting it into the resources of the gerrit_plugin() rule. You can build this js file in any way you want. We are just providing and maintaining one canonical way of building the core frontend plugins, and that way does not support standalone build at the moment. I have no idea how hard it would be to add this support, but it would cost me a day or so to figure it out, so I cannot prioritize that, because I don\u0027t think it is the Gerrit frontend teams\u0027 responsibility to build this.\n\nBut I think there is another way to unblock you, if you cannot do without the standalone build for 3.4:\n\nThese three BUILD rules look a bit intimidating, but they don\u0027t actually do much:\n\n1. rollup_bundle: Roll up the 3 js files into 1 but resolving the module imports.\n2. polygerrit_plugin: Minify the js.\n3. genrule2: Zip the js file.\n\nWhat about just checking in 1 javascript file for your plugin instead of 3? The plugin is small enough, so this is still readable. Minifying and zipping also seems unnecessary boilerplate. So if you just have one js file, then you can reference that from your gerrit_plugin() resources directly and do not have to use any of the above 3 BUILD rules. WDYT?",
      "parentUuid": "b35467b0_5328feae",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a964480_8590d726",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2021-04-23T08:51:52Z",
      "side": 1,
      "message": "Nasser, I agree with Ben - \"standalone\" build is a substantial amount of work. I described required steps below, but first let me answer to some of your comments.\n\n\u003e\u003e having the Gerrit source tree shouldn\u0027t be required.\n\nAs far as I know, all existing plugins require Gerrit source tree. The WORKSPACE file is located in the Gerrit source tree and none of the plugin has its own WORKSPACE file. According to the Bazel docs the WORKSPACE is required - it defines the root of a workspace (https://docs.bazel.build/versions/master/build-ref.html).\nSo, it is impossible to build plugin without cloning the Gerrit tree (a developer can clone either the latest version or a stable branch).\n\nThis plugin (\"task\") already loads items from \"//tools/bzl:plugin.bzl\", so it is already depends on the Gerrit tree.\n\nOther plugins also depends on the Gerrit tree (for example https://gerrit.googlesource.com/plugins/rename-project/+/refs/heads/master/BUILD:\n  # //tools/bzl:junit.bzl is in the Gerrit tree\n  load(\"//tools/bzl:junit.bzl\", \"junit_tests\")\n  # //tools/bzl:plugin.bzl is in the Gerrit tree\n  load(\n      \"//tools/bzl:plugin.bzl\",\n      \"PLUGIN_DEPS\",\n      \"PLUGIN_TEST_DEPS\",\n      \"gerrit_plugin\",\n  )\n)\n\n\u003e\u003e The face value benefit is that I only need to clone the plugin I want to develop on to be able to develop it... That benefit multiplies into others like a simpler CI/CD setup too.\n\nI think we all agree with these benefits, but right now it doesn\u0027t look like an easy task to do and a good reusable solution requires weeks of work.\n\nI did some research some time ago about standalone plugins and found that:\n1) First of all, a plugin must have its own workspace with WORKSPACE file.\n2a) The plugin should either has its own package.json with all dependencies (including rollup.js) \nOR\n2b) we should create our own rules for gerrit plugins and publish them separately (similar to rules_nodejs), so Gerrit plugins can use it.\n\nI think, the 2b is the best solution, but as I wrote above - it requires weeks of work and should be planned.\n\n2a is doable for this (\"task\") plugin, but the maintaining cost can be very high - in overall, packages versions must be always in sync between a plugin and the Gerrit. Maybe for this is not a problem right now, but the solution can\u0027t be scaled to other plugins. And I think it is not good to have a special solution for a single plugin.",
      "parentUuid": "4d0af775_81467798",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab2e911e_4f8f0cdf",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2021-04-23T09:07:50Z",
      "side": 1,
      "message": "Sorry, I didn\u0027t notice that actually \"task\" plugin already has its own WORKSPACE and there is a bazlets :(\nI need some time to think about it.",
      "parentUuid": "8a964480_8590d726",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a348824_bd7bf7f3",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2021-04-23T09:41:04Z",
      "side": 1,
      "message": "I checked https://gerrit.googlesource.com/bazlets/ and it should be updated for rollup support. However, the bazlets is maintaining by community, I am not sure how long it can take.\n\nAnother options (suggested earlier by Ben) - merge everything into a single file, because and do not use rollup at all\n\nAnd option 3 is to remove WORKSPACE file and make this plugin similar to other plugins.\n\nAs a maintainer of Gerrit, I would prefer option 3. I think that in the future we can face the same problem again if we want to import something else from gerrit and the plugin can be source of a problem.",
      "parentUuid": "ab2e911e_4f8f0cdf",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3482a8dd_63200455",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-04-23T09:49:11Z",
      "side": 1,
      "message": "I added standalone build mode to Buck years ago, based on Bucklets, and later migrated it to Bazel and Bazlets. It was always kind of \"best efforts\" support only, though. As the matter of fact, standalone build mode was removed from all gerrit plugins, that I support. I stopped working on standalone build mode.\n\nStandalone build mode is based on bazlets rules, where for example gerrit_plugin rule is implemented. Bazlets are fetched from the plugin\u0027s own WORKSPACE file, obviously. Recursive workspace is not supported in Bazel (it worked in Buck).\n\nWith UI migration to Polymer we added rules_closure dependency as well to bazlets: [1].\n\nYou can see it in action, for example in reviewers plugin on branch stable-3.1:\n\n  $ cd reviewers\n  $ git checkout stable-3.1\n  $ git describe --always HEAD\n  6bfb8c9\n  $ bazel build :reviewers\n  Target //:reviewers up-to-date:\n  bazel-bin/reviewers.jar\nINFO: Elapsed time: 185.651s, Critical Path: 45.76s\nINFO: 258 processes: 18 internal, 221 linux-sandbox, 2 local, 17 worker.\nINFO: Build completed successfully, 258 total actions\n\nin stable-3.1, reviewers plugin used Polymer 1/2 only:\n\n  polygerrit_plugin(\n    name \u003d \"rv-reviewers\",\n    srcs \u003d glob([\n        \"rv-reviewers/*.html\",\n        \"rv-reviewers/*.js\",\n    ]),\n    app \u003d \"plugin.html\",\n  )\n\nthat worked in standalone build mode, see: [2].\n\nAs I mentioned, standalone build mode was removed from all plugins, in reviewers plugin in: [3], with this commit message:\n\n  Bazel: Remove standalone build mode\n  This change is a preparation to migrate reviewers plugin to Polymer 3.\n\nMy thoughts to your comment:\n\n\u003e 2a) The plugin should either has its own package.json with all dependencies (including rollup.js) \n\nYes basically, dump the content of WORKSPACE from gerrit into the plugin, copy all BZL-files in bazlets.\n\n\u003e OR\n\u003e 2b) we should create our own rules for gerrit plugins and publish them separately \u003e (similar to rules_nodejs), so Gerrit plugins can use it.\n\nI don\u0027t think it would be needed, because JS plugins don\u0027t use any JavaScript API from gerrit core. You would only need it, if Gerrit-Polymer-API is exposed. Then yes, we would publish it to Rule NodeJs Regsitry. I did it all for GWT UI, obviously, see: [4]. That way, plugin were able to consume the GWT plugin API in standalone build mode from Maven Central.\n\n[1] https://gerrit-review.googlesource.com/c/bazlets/+/194794\n[2] https://gerrit-review.googlesource.com/c/bazlets/+/194794/2/tools/js.bzl#431\n[3] https://gerrit-review.googlesource.com/c/plugins/reviewers/+/221354\n[4] https://mvnrepository.com/artifact/com.google.gerrit/gerrit-plugin-gwtui",
      "parentUuid": "ab2e911e_4f8f0cdf",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c87b294a_ea1444b0",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-04-23T14:32:10Z",
      "side": 1,
      "message": "I fixed standalone build for Polymer 3 plugins.\n\nThis change depends on this Bazlets change 304117.\n\nTo verify, fetch this Bazlets change, uncomment in WORKSPACE file bazlets import line, for me\n\n  local_path \u003d \"/home/davido/projects/bazlets\",\n\nand run:\n\n  $ bazel build :task\nINFO: Analyzed target //:task (49 packages loaded, 695 targets configured).\nINFO: Found 1 target...\nTarget //:task up-to-date:\n  bazel-bin/task.jar\nINFO: Elapsed time: 18.568s, Critical Path: 7.03s\nINFO: 11 processes: 2 internal, 7 linux-sandbox, 2 worker.\nINFO: Build completed successfully, 11 total actions\n\nAnd looking into bundled and minified gr-task-plugin.js (using terser plugin) static/gr-task-plugin.js: it looks sane: [1].\n\n[1] http://paste.openstack.org/show/804749",
      "parentUuid": "3482a8dd_63200455",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8bf1679_b9179359",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-04-24T12:21:30Z",
      "side": 1,
      "message": "Not applicable any more. This is now moved to //tools/bzl:js.bzl in core or Bazlets in standalone build mode.",
      "parentUuid": "c9112f37_a31d7500",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2ffe061_b4e42d9a",
        "filename": "BUILD",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-04-29T20:57:21Z",
      "side": 1,
      "message": "\u003e These three BUILD rules look a bit intimidating, but they don\u0027t actually do much:\n\u003e \n\u003e 1. rollup_bundle: Roll up the 3 js files into 1 but resolving the module imports.\n\u003e 2. polygerrit_plugin: Minify the js.\n\u003e 3. genrule2: Zip the js file.\n\u003e \n\u003e What about just checking in 1 javascript file for your plugin instead of 3? The \u003eplugin is small enough, so this is still readable. Minifying and zipping also seems unnecessary boilerplate. So if you just have one js file, then you can reference that from your gerrit_plugin() resources directly and do not have to use any of the above 3 BUILD rules. WDYT?\n\n@Ben, I\u0027ve just implemented your above suggestion in change 304595.\n\nI went one step further, and still use separated JS file, and create rollup bundle manually, with `npm run build` invocation:\n\n  $ npm run build\n  \u003e task@2.16.13-SNAPSHOT build /home/davido/projects/task\n  \u003e rollup -c\n  gr-task-plugin/plugin.js → src/main/resources/static/gr-task-plugin.js...\n  created src/main/resources/static/gr-task-plugin.js in 49ms\n\nDone. I compared the produced output file and the content is exactly the same as the one produced with polygerrit_plugin/gerrit_js_bundle with Bazel, but without minification step. Of course we could also add terser plugin to perform JS minification with this setup outside Bazel.\n\nThe only disadvantage that I see is that manually performed bundling step. One could change the sources, but missed to run `npm run build` command and would end up with stale JS bundle inside final plugin artifact.\n\nBut the point was to demonstrate, that we don\u0027t really need rules_nodejs, and npm dependencies semi-managed by Bazel/npm integration and just could do bundling outside of Bazel (or not at all, if you would just use bundled JS as source of truth, and don\u0027t run/use rollup/terser at all).",
      "parentUuid": "c87b294a_ea1444b0",
      "revId": "a2b80af6688153db4c4f58081f2201e171a9daba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}